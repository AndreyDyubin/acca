syntax = "proto3";

package api;

import "api/models.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/wrappers.proto";

option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.enumdecl_all) = true;

service Invoices {

    rpc NewInvoice (NewInvoiceRequest) returns (NewInvoiceResponse) {
    }

    rpc GetInvoiceByID (GetInvoiceByIDRequest) returns (GetInvoiceByIDResponse) {
    }

    rpc AddTransactionToInvoice (AddTransactionToInvoiceRequest) returns (AddTransactionToInvoiceResponse) {
    }

    rpc GetTransactionByID (GetTransactionByIDRequest) returns (GetTransactionByIDResponse) {
    }

    rpc AuthInvoice (AuthInvoiceRequest) returns (AuthInvoiceResponse) {
    }

    rpc AcceptInvoice (AcceptInvoiceRequest) returns (AcceptInvoiceResponse) {
    }

    rpc RejectInvoice (RejectInvoiceRequest) returns (RejectInvoiceResponse) {
    }

    rpc AuthTx (AuthTxRequest) returns (AuthTxResponse) {
    }

    rpc AcceptTx (AcceptTxRequest) returns (AcceptTxResponse) {
    }

    rpc RejectTx (RejectTxRequest) returns (RejectTxResponse) {
    }
}

message NewInvoiceRequest {
    // key внешний уникальный идентицитора инвойса.
    string key = 1;
    // strategy стратегия работы с инвойсом.
    string strategy = 2;
    google.protobuf.BytesValue meta = 3 [(gogoproto.wktpointer) = true];
}
message NewInvoiceResponse {
    int64 invoice_id = 1;
}

message GetInvoiceByIDRequest {
    int64 invoice_id = 1;
}
message GetInvoiceByIDResponse {
    Invoice invoice = 1;
}

message AddTransactionToInvoiceRequest {
    message Oper {
        int64 src_acc_id = 1;
        int64 dst_acc_id = 2;
        OperStrategy strategy = 3;
        int64 amount = 4;
        google.protobuf.StringValue key = 5 [(gogoproto.wktpointer) = true];
        google.protobuf.BytesValue meta = 6 [(gogoproto.wktpointer) = true];
        bool hold = 7;
        google.protobuf.Int64Value hold_acc_id = 8 [(gogoproto.wktpointer) = true];
    }
    // invoice_id связанный с транзакцией инвойс.
    int64 invoice_id = 1;
    // key Уникальный внешний идентификатор транзакции (опционально).
    google.protobuf.StringValue key = 2 [(gogoproto.wktpointer) = true];
    // strategy стратегия работы с инвойсом.
    string strategy = 3;
    google.protobuf.BytesValue meta = 4 [(gogoproto.wktpointer) = true];
    repeated Oper operations = 5;
}
message AddTransactionToInvoiceResponse {
    int64 tx_id = 1;
}

message GetTransactionByIDRequest {
    int64 tx_id = 1;
}
message GetTransactionByIDResponse {
    Tx tx = 1;
}

message AuthInvoiceRequest {
    int64 invoice_id = 1;
}
message AuthInvoiceResponse {
}

message AcceptInvoiceRequest {
    int64 invoice_id = 1;
}
message AcceptInvoiceResponse {
}

message RejectInvoiceRequest {
    int64 invoice_id = 1;
}
message RejectInvoiceResponse {
}

message AuthTxRequest {
    int64 tx_id = 1;
}
message AuthTxResponse {
}

message AcceptTxRequest {
    int64 tx_id = 1;
}
message AcceptTxResponse {
}

message RejectTxRequest {
    int64 tx_id = 1;
}
message RejectTxResponse {
}
