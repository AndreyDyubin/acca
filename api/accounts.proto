syntax = "proto3";

package api;

import "api/models.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/wrappers.proto";

option (gogoproto.unmarshaler_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.enumdecl_all) = true;

service Accounts {
    // CreateCurrency создание валюты.
    //
    // Errors:
    //   - Common errors
    //   - 3 (InvalidArgument) "Invalid key."
    //   - 5 (NotFound) "currency not found"
    //   - 6 (AlreadyExists) "Already exists."
    rpc CreateCurrency (CreateCurrencyRequest) returns (CreateCurrencyResponse) {
    }

    // GetCurrency получить валюты.
    //
    // Errors:
    //   - Common errors
    //   - 3 (InvalidArgument) "Invalid key."
    //   - 5 (NotFound) "currency not found"
    rpc GetCurrency (GetCurrencyRequest) returns (GetCurrencyResponse) {
    }

    // CreateAccount создать балансный счет.
    //
    // Errors:
    //   - Common errors
    //   - 3 (InvalidArgument) "Invalid key."
    rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse) {
    }

    // GetAccountByKey получить балансный счет по ключу и валюте.
    //
    // Errors:
    //   - Common errors
    //   - 3 (InvalidArgument) "Invalid key."
    //   - 5 (NotFound) "currency not found"
    //   - 5 (NotFound) "account not found"
    rpc GetAccountByKey (GetAccountByKeyRequest) returns (GetAccountByKeyResponse) {
    }

    // BalanceChanges получить список изменений балансного счета по его id.
    //
    // Errors:
    //   - Common errors
    rpc BalanceChanges (BalanceChangesRequest) returns (BalanceChangesResponse) {
    }
}

message CreateCurrencyRequest {
    string key = 1;
    google.protobuf.BytesValue meta = 2 [(gogoproto.wktpointer) = true];
}


message CreateCurrencyResponse {
}

message GetCurrencyRequest {
    string key = 1;
}

message GetCurrencyResponse {
    Currency currency = 1;
}

message CreateAccountRequest {
    string key = 1;
    string currency_key = 2;
    google.protobuf.BytesValue meta = 3 [(gogoproto.wktpointer) = true];
}

message CreateAccountResponse {
    int64 acc_id = 1;
}

message GetAccountByKeyRequest {
    string curr_key = 1;
    string key = 2;
}

message GetAccountByKeyResponse {
    Account account = 1;
}

message BalanceChangesRequest {
    int64 offset = 1;
    int64 limit = 2;
    google.protobuf.Int64Value acc_id = 3 [(gogoproto.wktpointer) = true];
}

message BalanceChangesResponse {
    repeated BalanceChanges balance_changes = 1;
}
