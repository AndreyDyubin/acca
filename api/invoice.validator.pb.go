// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/invoice.proto

package api

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

func (this *NewInvoiceRequest) Validate() error {
	if this.Meta != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Meta); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Meta", err)
		}
	}
	return nil
}
func (this *NewInvoiceResponse) Validate() error {
	return nil
}
func (this *GetInvoiceByIDRequest) Validate() error {
	return nil
}
func (this *GetInvoiceByIDResponse) Validate() error {
	if this.Invoice != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Invoice); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Invoice", err)
		}
	}
	return nil
}
func (this *AddTransactionToInvoiceRequest) Validate() error {
	if this.Key != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Key); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Key", err)
		}
	}
	if this.Meta != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Meta); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Meta", err)
		}
	}
	for _, item := range this.Operations {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Operations", err)
			}
		}
	}
	return nil
}
func (this *AddTransactionToInvoiceRequest_Oper) Validate() error {
	if this.Key != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Key); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Key", err)
		}
	}
	if this.Meta != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Meta); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Meta", err)
		}
	}
	if this.HoldAccId != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.HoldAccId); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("HoldAccId", err)
		}
	}
	return nil
}
func (this *AddTransactionToInvoiceResponse) Validate() error {
	return nil
}
func (this *GetTransactionByIDRequest) Validate() error {
	return nil
}
func (this *GetTransactionByIDResponse) Validate() error {
	if this.Tx != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Tx); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Tx", err)
		}
	}
	return nil
}
func (this *AuthInvoiceRequest) Validate() error {
	return nil
}
func (this *AuthInvoiceResponse) Validate() error {
	return nil
}
func (this *AcceptInvoiceRequest) Validate() error {
	return nil
}
func (this *AcceptInvoiceResponse) Validate() error {
	return nil
}
func (this *RejectInvoiceRequest) Validate() error {
	return nil
}
func (this *RejectInvoiceResponse) Validate() error {
	return nil
}
func (this *AuthTxRequest) Validate() error {
	return nil
}
func (this *AuthTxResponse) Validate() error {
	return nil
}
func (this *AcceptTxRequest) Validate() error {
	return nil
}
func (this *AcceptTxResponse) Validate() error {
	return nil
}
func (this *RejectTxRequest) Validate() error {
	return nil
}
func (this *RejectTxResponse) Validate() error {
	return nil
}
