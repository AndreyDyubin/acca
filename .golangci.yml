---
linters-settings:
  errcheck:
    check-type-assertions: true
    # check-blank: true

  govet:
    use-installed-packages: true

  maligned:
    suggest-new: true

  # prevent import of "errors" instead of "github.com/pkg/errors"
  depguard:
    list-type: blacklist
    include-go-root: true
    packages:
    #  - errors TODO поправить настройки

  lll:
    line-length: 140
    tab-width: 4

  unused:
    check-exported: true

  unparam:
    algo: rta
    check-exported: true

  nakedret:
    max-func-lines: 32

linters:
  # enable-all: true

  disable-all: true
  enable:
    # - errcheck
    # - megacheck
    - structcheck
    - varcheck
    - ineffassign
    - typecheck
    - govet
    # - deadcode

    # - golint
    # - staticcheck
    # - unused
    # - gosimple
    # - gas
    # - interfacer
    - unconvert
    # - dupl
    # - goconst
    # - gocyclo
    - gofmt
    - goimports
    - maligned
    - depguard
    # - misspell
    # - lll
    # - unparam
    # - nakedret
    - prealloc

skip-dirs:
  - vendor

issues:
  exclude-use-default: false
  exclude:
    # struct of size 264 bytes could be of size 256 bytes:
    # Игнорируем факт того что объем большого размера (на этапе активной фазы разработки не актуално).
    - 'struct of size .* bytes could be of size 256 bytes'

    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - 'Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked'

    # golint: Annoying issue about not having a comment. The rare codebase has such comments
    - '(comment on exported (method|function|type|const)|should have( a package)? comment|comment should be of the form)'

    # golint: False positive when tests are defined in package 'test'
    - 'func name will be used as test\.Test.* by other packages, and that stutters; consider calling this'

    # gas: Duplicated errcheck checks
    - 'G104: Errors unhandled'

    # gas: False positive is triggered by 'exec.Command("make", args...)' in tests/main_test.go
    - 'G204: Subprocess launched with variable'

    # gas: False positive is triggered by 'b, err := ioutil.ReadFile(file)' in tests/main_test.go
    - 'G304: Potential file inclusion via variable'
